UDACITY - How to Use Git and GitHub - Lesson 2 Reflections

What happens when you initialize a repository?  Why do you need to do it?
 - Creating the repository creates the .git folder and structure to start
   tracking changes.  You need to do it so when you change a file there will
   be a record of the change.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
 - The staging area contains only the files that are to be included in the next
   commit; the working directory contains all files.  This is valuable because
   you can choose which files to commit to the repository.

How can you use the staging area to make sure you have one commit per logical
change?
 - You can move only the files with intended changes to the staging area and
   then use 'git diff --staged' to view all changes between the staging area
   and the master (current version).

What are some situations when branches would be helpful in keeping your history
organized?  How would branches help?
 - Branches can help when you are working on something experimental and don't
   want to affect the master.  Also, they can be helpful when multiple people
   are collaborating on the same codebase.

How do the diagrams help you visualize the branch structure?
 - Using 'git log --graph --oneline master <branch_name>' shows you the commits
   that are in each branch and at which commit the split occurred.

What is the result of merging two branches together?  Why do we represent it in
the diagram the way we do?
 - All changes from both branches are incorporated into the new commit during
   the merge.  It is shown in the diagram as having two parents because changes
   came from both branches.
